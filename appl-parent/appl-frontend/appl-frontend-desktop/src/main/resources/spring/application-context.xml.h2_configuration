<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
      xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <import resource="classpath*:dictionary-context.xml"/>
    <import resource="classpath*:ambar_core_context.xml"/>
    <import resource="classpath*:context.xml"/>
    
    <import resource="classpath:spring/beans.xml"/>
    <import resource="classpath:spring/crud-beans.xml"/>

	
	<!-- messages -->	   	   	
   	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>ambar_core_messages</value>
				<value>clientes_services_messages</value>
				<value>clientes_domain_messages</value>
				<value>trabajos_services_messages</value>
				<value>trabajos_domain_messages</value>				
			</list>
		</property>
	</bean>
	
	<bean id="messagesService"
		class="org.ambar.core.commons.messages.impl.MessageServiceImpl">
		<property name="messageSource" ref="messageSource" />
	</bean>
	
	<!-- persistence -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="org.h2.Driver"
		p:url="jdbc:h2:/~imprenta">
		<property name="username" value="admin" />
		<property name="password" value="admin" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<array>
				<value>classpath:META-INF\persistence.xml</value>
			</array>
		</property>
		<property name="defaultDataSource" ref="dataSource" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="persistenceUnitName" value="AMBAR-PU"/>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- Parámetro solo válido para MYSQL ya que el dialect InnoDB permite transacciones-->
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>				
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="jpaAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="H2" p:showSql="true" p:generateDdl="true">
	</bean>
	
	<!-- diccionario -->	
    <bean id="configurationReader" class="org.ambar.core.dictionary.configuration.impl.ConfigurationReaderImpl"
          init-method="configure" scope="prototype">
        <property name="entityMetaDataFile" value="dictionary/EntitiesMetaData.xml"/>
        <property name="entityMetaDataUnMarshaller" ref="entityMetaDataUnMarshaller"/>
        <property name="navigationFile" value="dictionary/NavigationManager.xml"/>
        <property name="navigationUnMarshaller" ref="navigationManagerUnMarshaller"/>        
    </bean>

    <bean id="dictionaryServices" class="org.ambar.core.dictionary.services.impl.DictionaryServicesImpl"
          factory-bean="configurationReader" factory-method="getDictionaryServices"/>

</beans>